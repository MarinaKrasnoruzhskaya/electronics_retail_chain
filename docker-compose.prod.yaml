version: "3"

services:
  web:
    # Берем Dockerfile из каталога app
    build:
      context: .
      dockerfile: Dockerfile.prod
    # Запускаем сервер gunicorn
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    # Открываем порт 8000 наружу
    expose:
      - 8000
    # Файл содержащий переменные для контейнера
    env_file:
      - .env.prod
    depends_on:
      - db
  db:
    image: postgres:16-alpine
    restart: on-failure
    env_file:
      - .env.prod.db
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "-c", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
  nginx:
    build: ./nginx
    ports:
      - 1337:80
    depends_on:
      - web

#  app:
#    build: .
#    tty: true
#    ports:
#      - "8000:8000"
#    command: sh -c "python manage.py migrate && python manage.py csu && python manage.py runserver 0.0.0.0:8000"
#    depends_on:
#      db:
#        condition: service_healthy
#    volumes:
#      - .:/app
#    env_file:
#      - .env
#
volumes:
  pg_data:
